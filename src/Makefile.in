# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
noinst_PROGRAMS = lemon$(EXEEXT)
@HAVE_PERFPROBES_TRUE@am__append_1 = bfprobes.c bfprobes.h
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/m4/ax_prog_flex.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__bitfunc_PYTHON_DIST) \
	$(nobase_include_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/bitfunc/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bitfuncdir)" \
	"$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libaiger_la_LIBADD =
am_libaiger_la_OBJECTS = libaiger_la-aiger.lo
libaiger_la_OBJECTS = $(am_libaiger_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libaiger_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libaiger_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
libbapparse_la_LIBADD =
am_libbapparse_la_OBJECTS = libbapparse_la-bap_lex.lo \
	libbapparse_la-bap_parse.lo
libbapparse_la_OBJECTS = $(am_libbapparse_la_OBJECTS)
libbapparse_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libbapparse_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
libbfabc_bridge_la_LIBADD =
am_libbfabc_bridge_la_OBJECTS = libbfabc_bridge_la-abc_bridge.lo
libbfabc_bridge_la_OBJECTS = $(am_libbfabc_bridge_la_OBJECTS)
libbfabc_bridge_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libbfabc_bridge_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__DEPENDENCIES_1 =
libbitfunc_la_DEPENDENCIES = libaiger.la libbapparse.la \
	$(am__DEPENDENCIES_1) $(FS_LIBS)
am__libbitfunc_la_SOURCES_DIST = array.c circuits.c bitfunc.c bitvec.c \
	mem.c cbranch.c program.c pcode_definitions.c \
	llvm_definitions.c debug.c solve.c machine_state.c \
	sparsebits.c bap.c klee_mem.c bfprobes.c bfprobes.h
am__objects_1 = libbitfunc_la-array.lo libbitfunc_la-circuits.lo \
	libbitfunc_la-bitfunc.lo libbitfunc_la-bitvec.lo \
	libbitfunc_la-mem.lo libbitfunc_la-cbranch.lo \
	libbitfunc_la-program.lo libbitfunc_la-pcode_definitions.lo \
	libbitfunc_la-llvm_definitions.lo libbitfunc_la-debug.lo \
	libbitfunc_la-solve.lo libbitfunc_la-machine_state.lo \
	libbitfunc_la-sparsebits.lo libbitfunc_la-bap.lo \
	libbitfunc_la-klee_mem.lo
@HAVE_PERFPROBES_TRUE@am__objects_2 = libbitfunc_la-bfprobes.lo
am_libbitfunc_la_OBJECTS = $(am__objects_1) $(am__objects_2)
am__objects_3 =
nodist_libbitfunc_la_OBJECTS = $(am__objects_3)
libbitfunc_la_OBJECTS = $(am_libbitfunc_la_OBJECTS) \
	$(nodist_libbitfunc_la_OBJECTS)
libbitfunc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libbitfunc_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
lemon_SOURCES = lemon.c
lemon_OBJECTS = lemon-lemon.$(OBJEXT)
lemon_LDADD = $(LDADD)
lemon_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(lemon_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/bitfunc
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/lemon-lemon.Po \
	./$(DEPDIR)/libaiger_la-aiger.Plo \
	./$(DEPDIR)/libbapparse_la-bap_lex.Plo \
	./$(DEPDIR)/libbapparse_la-bap_parse.Plo \
	./$(DEPDIR)/libbfabc_bridge_la-abc_bridge.Plo \
	./$(DEPDIR)/libbitfunc_la-array.Plo \
	./$(DEPDIR)/libbitfunc_la-bap.Plo \
	./$(DEPDIR)/libbitfunc_la-bfprobes.Plo \
	./$(DEPDIR)/libbitfunc_la-bitfunc.Plo \
	./$(DEPDIR)/libbitfunc_la-bitvec.Plo \
	./$(DEPDIR)/libbitfunc_la-cbranch.Plo \
	./$(DEPDIR)/libbitfunc_la-circuits.Plo \
	./$(DEPDIR)/libbitfunc_la-debug.Plo \
	./$(DEPDIR)/libbitfunc_la-klee_mem.Plo \
	./$(DEPDIR)/libbitfunc_la-llvm_definitions.Plo \
	./$(DEPDIR)/libbitfunc_la-machine_state.Plo \
	./$(DEPDIR)/libbitfunc_la-mem.Plo \
	./$(DEPDIR)/libbitfunc_la-pcode_definitions.Plo \
	./$(DEPDIR)/libbitfunc_la-program.Plo \
	./$(DEPDIR)/libbitfunc_la-solve.Plo \
	./$(DEPDIR)/libbitfunc_la-sparsebits.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libaiger_la_SOURCES) $(libbapparse_la_SOURCES) \
	$(libbfabc_bridge_la_SOURCES) $(libbitfunc_la_SOURCES) \
	$(nodist_libbitfunc_la_SOURCES) lemon.c
DIST_SOURCES = $(libaiger_la_SOURCES) $(libbapparse_la_SOURCES) \
	$(libbfabc_bridge_la_SOURCES) \
	$(am__libbitfunc_la_SOURCES_DIST) lemon.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__bitfunc_PYTHON_DIST = python/bitfunc/expdag.py \
	python/bitfunc/__init__.py python/bitfunc/sexp_parser.py \
	python/bitfunc/parse_smt2.py python/bitfunc/qc.py \
	python/bitfunc/llvm_symex.py
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__pep3147_tweak = \
  sed -e 's|\.py$$||' -e 's|[^/]*$$|__pycache__/&.*.pyc __pycache__/&.*.pyo|'
py_compile = $(top_srcdir)/py-compile
HEADERS = $(nobase_include_HEADERS) $(nobase_nodist_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/../common.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp $(top_srcdir)/py-compile
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABC_CPPFLAGS = @ABC_CPPFLAGS@
ABC_LDFLAGS = @ABC_LDFLAGS@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CODEMODEL = @CODEMODEL@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CTANGLE = @CTANGLE@
CWEAVE = @CWEAVE@
CYGPATH_W = @CYGPATH_W@
CYTHON = @CYTHON@
DEBUG_CFLAGS = @DEBUG_CFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN_PAPER_SIZE = @DOXYGEN_PAPER_SIZE@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DX_CONFIG = @DX_CONFIG@
DX_DOCDIR = @DX_DOCDIR@
DX_DOT = @DX_DOT@
DX_DOXYGEN = @DX_DOXYGEN@
DX_DVIPS = @DX_DVIPS@
DX_EGREP = @DX_EGREP@
DX_ENV = @DX_ENV@
DX_FLAG_chi = @DX_FLAG_chi@
DX_FLAG_chm = @DX_FLAG_chm@
DX_FLAG_doc = @DX_FLAG_doc@
DX_FLAG_dot = @DX_FLAG_dot@
DX_FLAG_html = @DX_FLAG_html@
DX_FLAG_man = @DX_FLAG_man@
DX_FLAG_pdf = @DX_FLAG_pdf@
DX_FLAG_ps = @DX_FLAG_ps@
DX_FLAG_rtf = @DX_FLAG_rtf@
DX_FLAG_xml = @DX_FLAG_xml@
DX_HHC = @DX_HHC@
DX_LATEX = @DX_LATEX@
DX_MAKEINDEX = @DX_MAKEINDEX@
DX_PDFLATEX = @DX_PDFLATEX@
DX_PERL = @DX_PERL@
DX_PROJECT = @DX_PROJECT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FUNCSAT_CPPFLAGS = @FUNCSAT_CPPFLAGS@
FUNCSAT_LDFLAGS = @FUNCSAT_LDFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBABC = @LIBABC@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPT_CFLAGS = @OPT_CFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFTEX = @PDFTEX@
PERFPROBES_CFLAGS = @PERFPROBES_CFLAGS@
PERFPROBES_LIBS = @PERFPROBES_LIBS@
PICOSAT_CPPFLAGS = @PICOSAT_CPPFLAGS@
PICOSAT_LDFLAGS = @PICOSAT_LDFLAGS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POW_LIB = @POW_LIB@
PROF_CFLAGS = @PROF_CFLAGS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHARED_CFLAGS = @SHARED_CFLAGS@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
FS_SRCDIR = $(top_srcdir)/funcsat
FS_BUILDDIR = $(top_builddir)/funcsat
FS_INCLUDES = -I$(FS_SRCDIR) -I$(FS_SRCDIR)/src
FS_LIBS = $(FS_BUILDDIR)/src/libfuncsat.la
AM_CFLAGS = $(CODEMODEL) $(SHARED_CFLAGS) $(OPT_CFLAGS) $(DEBUG_CFLAGS) $(WARN_CFLAGS) $(PROF_CFLAGS)
AM_CPPFLAGS = -I$(srcdir) -I$(srcdir)/bitfunc -I$(srcdir)/.. $(FS_INCLUDES)
AM_LDFLAGS = $(CODEMODEL)
normal_headers = bitfunc/config.h \
 bitfunc/types.h bitfunc/bitvec.h bitfunc/aiger.h bitfunc/array.h bitfunc/circuits.h bitfunc/circuits_internal.h bitfunc/bitfunc_internal.h bitfunc/mem.h bitfunc/program.h bitfunc/program_internal.h bitfunc/machine_state.h bitfunc/debug.h bitfunc/sparsebits.h \
 bitfunc/pcode_definitions.h bitfunc/llvm_definitions.h bitfunc/bap.h \
 bitfunc/klee_mem.h

normal_sources = array.c circuits.c bitfunc.c bitvec.c mem.c cbranch.c program.c pcode_definitions.c llvm_definitions.c debug.c solve.c machine_state.c sparsebits.c bap.c \
  klee_mem.c

normal_built_headers = 
normal_built_sources = 
lemon_CFLAGS = 
EXTRA_DIST = lempar.c bap_parse.y bap_lex.l samepath.py
CLEANFILES = backbone-nw.c bitfunc/backbone-nw.h bap_parse.c bap_parse.h bap_parse.out bap_lex.c bap_lex.h parser.stamp lexer.stamp
@LLVM_PY_ENABLED_FALSE@llvm_py_sources = 

# EXTRA_DIST = backbone.nw
@LLVM_PY_ENABLED_TRUE@llvm_py_sources = python/bitfunc/llvm_symex.py
bitfunc_PYTHON = python/bitfunc/expdag.py python/bitfunc/__init__.py \
  python/bitfunc/sexp_parser.py python/bitfunc/parse_smt2.py \
  python/bitfunc/qc.py \
  $(llvm_py_sources)

bitfuncdir = $(pythondir)/bitfunc
lib_LTLIBRARIES = libbitfunc.la
noinst_LTLIBRARIES = libaiger.la libbapparse.la libbfabc_bridge.la
nobase_include_HEADERS = \
 $(normal_headers)

nobase_nodist_include_HEADERS = \
 $(normal_built_headers)

libaiger_la_SOURCES = aiger.c
libaiger_la_CFLAGS = $(AM_CFLAGS) -Wno-error
libbfabc_bridge_la_SOURCES = abc_bridge.c
libbfabc_bridge_la_CFLAGS = $(AM_CFLAGS) -Wno-error
libbitfunc_la_SOURCES = $(normal_sources) $(am__append_1)
libbitfunc_la_CFLAGS = $(AM_CFLAGS) $(PERFPROBES_CFLAGS)
libbitfunc_la_LIBADD = libaiger.la libbapparse.la $(PERFPROBES_LIBS) $(FS_LIBS)
nodist_libbitfunc_la_SOURCES = \
 $(normal_built_sources)

INDENT = gnuindent
INDENT_FLAGS = -kr -l80 -ci2 -i2

# its own lib because we need special CFLAGS; stupid lemon
libbapparse_la_SOURCES = bap_lex.c bap_lex.h bap_parse.h bap_parse.c bap_parse_types.h
libbapparse_la_CFLAGS = $(AM_CFLAGS) -Wno-error
BUILT_SOURCES = bap_parse.h bap_parse.c bap_lex.h bap_lex.c
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/../common.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libaiger.la: $(libaiger_la_OBJECTS) $(libaiger_la_DEPENDENCIES) $(EXTRA_libaiger_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libaiger_la_LINK)  $(libaiger_la_OBJECTS) $(libaiger_la_LIBADD) $(LIBS)

libbapparse.la: $(libbapparse_la_OBJECTS) $(libbapparse_la_DEPENDENCIES) $(EXTRA_libbapparse_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libbapparse_la_LINK)  $(libbapparse_la_OBJECTS) $(libbapparse_la_LIBADD) $(LIBS)

libbfabc_bridge.la: $(libbfabc_bridge_la_OBJECTS) $(libbfabc_bridge_la_DEPENDENCIES) $(EXTRA_libbfabc_bridge_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libbfabc_bridge_la_LINK)  $(libbfabc_bridge_la_OBJECTS) $(libbfabc_bridge_la_LIBADD) $(LIBS)

libbitfunc.la: $(libbitfunc_la_OBJECTS) $(libbitfunc_la_DEPENDENCIES) $(EXTRA_libbitfunc_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libbitfunc_la_LINK) -rpath $(libdir) $(libbitfunc_la_OBJECTS) $(libbitfunc_la_LIBADD) $(LIBS)

lemon$(EXEEXT): $(lemon_OBJECTS) $(lemon_DEPENDENCIES) $(EXTRA_lemon_DEPENDENCIES) 
	@rm -f lemon$(EXEEXT)
	$(AM_V_CCLD)$(lemon_LINK) $(lemon_OBJECTS) $(lemon_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lemon-lemon.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libaiger_la-aiger.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbapparse_la-bap_lex.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbapparse_la-bap_parse.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbfabc_bridge_la-abc_bridge.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-array.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-bap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-bfprobes.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-bitfunc.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-bitvec.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-cbranch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-circuits.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-debug.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-klee_mem.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-llvm_definitions.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-machine_state.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-mem.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-pcode_definitions.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-program.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-solve.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbitfunc_la-sparsebits.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libaiger_la-aiger.lo: aiger.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaiger_la_CFLAGS) $(CFLAGS) -MT libaiger_la-aiger.lo -MD -MP -MF $(DEPDIR)/libaiger_la-aiger.Tpo -c -o libaiger_la-aiger.lo `test -f 'aiger.c' || echo '$(srcdir)/'`aiger.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libaiger_la-aiger.Tpo $(DEPDIR)/libaiger_la-aiger.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='aiger.c' object='libaiger_la-aiger.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libaiger_la_CFLAGS) $(CFLAGS) -c -o libaiger_la-aiger.lo `test -f 'aiger.c' || echo '$(srcdir)/'`aiger.c

libbapparse_la-bap_lex.lo: bap_lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbapparse_la_CFLAGS) $(CFLAGS) -MT libbapparse_la-bap_lex.lo -MD -MP -MF $(DEPDIR)/libbapparse_la-bap_lex.Tpo -c -o libbapparse_la-bap_lex.lo `test -f 'bap_lex.c' || echo '$(srcdir)/'`bap_lex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbapparse_la-bap_lex.Tpo $(DEPDIR)/libbapparse_la-bap_lex.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bap_lex.c' object='libbapparse_la-bap_lex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbapparse_la_CFLAGS) $(CFLAGS) -c -o libbapparse_la-bap_lex.lo `test -f 'bap_lex.c' || echo '$(srcdir)/'`bap_lex.c

libbapparse_la-bap_parse.lo: bap_parse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbapparse_la_CFLAGS) $(CFLAGS) -MT libbapparse_la-bap_parse.lo -MD -MP -MF $(DEPDIR)/libbapparse_la-bap_parse.Tpo -c -o libbapparse_la-bap_parse.lo `test -f 'bap_parse.c' || echo '$(srcdir)/'`bap_parse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbapparse_la-bap_parse.Tpo $(DEPDIR)/libbapparse_la-bap_parse.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bap_parse.c' object='libbapparse_la-bap_parse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbapparse_la_CFLAGS) $(CFLAGS) -c -o libbapparse_la-bap_parse.lo `test -f 'bap_parse.c' || echo '$(srcdir)/'`bap_parse.c

libbfabc_bridge_la-abc_bridge.lo: abc_bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbfabc_bridge_la_CFLAGS) $(CFLAGS) -MT libbfabc_bridge_la-abc_bridge.lo -MD -MP -MF $(DEPDIR)/libbfabc_bridge_la-abc_bridge.Tpo -c -o libbfabc_bridge_la-abc_bridge.lo `test -f 'abc_bridge.c' || echo '$(srcdir)/'`abc_bridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbfabc_bridge_la-abc_bridge.Tpo $(DEPDIR)/libbfabc_bridge_la-abc_bridge.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='abc_bridge.c' object='libbfabc_bridge_la-abc_bridge.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbfabc_bridge_la_CFLAGS) $(CFLAGS) -c -o libbfabc_bridge_la-abc_bridge.lo `test -f 'abc_bridge.c' || echo '$(srcdir)/'`abc_bridge.c

libbitfunc_la-array.lo: array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-array.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-array.Tpo -c -o libbitfunc_la-array.lo `test -f 'array.c' || echo '$(srcdir)/'`array.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-array.Tpo $(DEPDIR)/libbitfunc_la-array.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='array.c' object='libbitfunc_la-array.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-array.lo `test -f 'array.c' || echo '$(srcdir)/'`array.c

libbitfunc_la-circuits.lo: circuits.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-circuits.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-circuits.Tpo -c -o libbitfunc_la-circuits.lo `test -f 'circuits.c' || echo '$(srcdir)/'`circuits.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-circuits.Tpo $(DEPDIR)/libbitfunc_la-circuits.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='circuits.c' object='libbitfunc_la-circuits.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-circuits.lo `test -f 'circuits.c' || echo '$(srcdir)/'`circuits.c

libbitfunc_la-bitfunc.lo: bitfunc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-bitfunc.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-bitfunc.Tpo -c -o libbitfunc_la-bitfunc.lo `test -f 'bitfunc.c' || echo '$(srcdir)/'`bitfunc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-bitfunc.Tpo $(DEPDIR)/libbitfunc_la-bitfunc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bitfunc.c' object='libbitfunc_la-bitfunc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-bitfunc.lo `test -f 'bitfunc.c' || echo '$(srcdir)/'`bitfunc.c

libbitfunc_la-bitvec.lo: bitvec.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-bitvec.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-bitvec.Tpo -c -o libbitfunc_la-bitvec.lo `test -f 'bitvec.c' || echo '$(srcdir)/'`bitvec.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-bitvec.Tpo $(DEPDIR)/libbitfunc_la-bitvec.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bitvec.c' object='libbitfunc_la-bitvec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-bitvec.lo `test -f 'bitvec.c' || echo '$(srcdir)/'`bitvec.c

libbitfunc_la-mem.lo: mem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-mem.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-mem.Tpo -c -o libbitfunc_la-mem.lo `test -f 'mem.c' || echo '$(srcdir)/'`mem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-mem.Tpo $(DEPDIR)/libbitfunc_la-mem.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mem.c' object='libbitfunc_la-mem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-mem.lo `test -f 'mem.c' || echo '$(srcdir)/'`mem.c

libbitfunc_la-cbranch.lo: cbranch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-cbranch.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-cbranch.Tpo -c -o libbitfunc_la-cbranch.lo `test -f 'cbranch.c' || echo '$(srcdir)/'`cbranch.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-cbranch.Tpo $(DEPDIR)/libbitfunc_la-cbranch.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cbranch.c' object='libbitfunc_la-cbranch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-cbranch.lo `test -f 'cbranch.c' || echo '$(srcdir)/'`cbranch.c

libbitfunc_la-program.lo: program.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-program.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-program.Tpo -c -o libbitfunc_la-program.lo `test -f 'program.c' || echo '$(srcdir)/'`program.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-program.Tpo $(DEPDIR)/libbitfunc_la-program.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='program.c' object='libbitfunc_la-program.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-program.lo `test -f 'program.c' || echo '$(srcdir)/'`program.c

libbitfunc_la-pcode_definitions.lo: pcode_definitions.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-pcode_definitions.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-pcode_definitions.Tpo -c -o libbitfunc_la-pcode_definitions.lo `test -f 'pcode_definitions.c' || echo '$(srcdir)/'`pcode_definitions.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-pcode_definitions.Tpo $(DEPDIR)/libbitfunc_la-pcode_definitions.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pcode_definitions.c' object='libbitfunc_la-pcode_definitions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-pcode_definitions.lo `test -f 'pcode_definitions.c' || echo '$(srcdir)/'`pcode_definitions.c

libbitfunc_la-llvm_definitions.lo: llvm_definitions.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-llvm_definitions.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-llvm_definitions.Tpo -c -o libbitfunc_la-llvm_definitions.lo `test -f 'llvm_definitions.c' || echo '$(srcdir)/'`llvm_definitions.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-llvm_definitions.Tpo $(DEPDIR)/libbitfunc_la-llvm_definitions.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='llvm_definitions.c' object='libbitfunc_la-llvm_definitions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-llvm_definitions.lo `test -f 'llvm_definitions.c' || echo '$(srcdir)/'`llvm_definitions.c

libbitfunc_la-debug.lo: debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-debug.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-debug.Tpo -c -o libbitfunc_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-debug.Tpo $(DEPDIR)/libbitfunc_la-debug.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='debug.c' object='libbitfunc_la-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

libbitfunc_la-solve.lo: solve.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-solve.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-solve.Tpo -c -o libbitfunc_la-solve.lo `test -f 'solve.c' || echo '$(srcdir)/'`solve.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-solve.Tpo $(DEPDIR)/libbitfunc_la-solve.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='solve.c' object='libbitfunc_la-solve.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-solve.lo `test -f 'solve.c' || echo '$(srcdir)/'`solve.c

libbitfunc_la-machine_state.lo: machine_state.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-machine_state.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-machine_state.Tpo -c -o libbitfunc_la-machine_state.lo `test -f 'machine_state.c' || echo '$(srcdir)/'`machine_state.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-machine_state.Tpo $(DEPDIR)/libbitfunc_la-machine_state.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='machine_state.c' object='libbitfunc_la-machine_state.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-machine_state.lo `test -f 'machine_state.c' || echo '$(srcdir)/'`machine_state.c

libbitfunc_la-sparsebits.lo: sparsebits.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-sparsebits.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-sparsebits.Tpo -c -o libbitfunc_la-sparsebits.lo `test -f 'sparsebits.c' || echo '$(srcdir)/'`sparsebits.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-sparsebits.Tpo $(DEPDIR)/libbitfunc_la-sparsebits.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sparsebits.c' object='libbitfunc_la-sparsebits.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-sparsebits.lo `test -f 'sparsebits.c' || echo '$(srcdir)/'`sparsebits.c

libbitfunc_la-bap.lo: bap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-bap.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-bap.Tpo -c -o libbitfunc_la-bap.lo `test -f 'bap.c' || echo '$(srcdir)/'`bap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-bap.Tpo $(DEPDIR)/libbitfunc_la-bap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bap.c' object='libbitfunc_la-bap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-bap.lo `test -f 'bap.c' || echo '$(srcdir)/'`bap.c

libbitfunc_la-klee_mem.lo: klee_mem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-klee_mem.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-klee_mem.Tpo -c -o libbitfunc_la-klee_mem.lo `test -f 'klee_mem.c' || echo '$(srcdir)/'`klee_mem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-klee_mem.Tpo $(DEPDIR)/libbitfunc_la-klee_mem.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='klee_mem.c' object='libbitfunc_la-klee_mem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-klee_mem.lo `test -f 'klee_mem.c' || echo '$(srcdir)/'`klee_mem.c

libbitfunc_la-bfprobes.lo: bfprobes.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -MT libbitfunc_la-bfprobes.lo -MD -MP -MF $(DEPDIR)/libbitfunc_la-bfprobes.Tpo -c -o libbitfunc_la-bfprobes.lo `test -f 'bfprobes.c' || echo '$(srcdir)/'`bfprobes.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitfunc_la-bfprobes.Tpo $(DEPDIR)/libbitfunc_la-bfprobes.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bfprobes.c' object='libbitfunc_la-bfprobes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbitfunc_la_CFLAGS) $(CFLAGS) -c -o libbitfunc_la-bfprobes.lo `test -f 'bfprobes.c' || echo '$(srcdir)/'`bfprobes.c

lemon-lemon.o: lemon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lemon_CFLAGS) $(CFLAGS) -MT lemon-lemon.o -MD -MP -MF $(DEPDIR)/lemon-lemon.Tpo -c -o lemon-lemon.o `test -f 'lemon.c' || echo '$(srcdir)/'`lemon.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lemon-lemon.Tpo $(DEPDIR)/lemon-lemon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lemon.c' object='lemon-lemon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lemon_CFLAGS) $(CFLAGS) -c -o lemon-lemon.o `test -f 'lemon.c' || echo '$(srcdir)/'`lemon.c

lemon-lemon.obj: lemon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lemon_CFLAGS) $(CFLAGS) -MT lemon-lemon.obj -MD -MP -MF $(DEPDIR)/lemon-lemon.Tpo -c -o lemon-lemon.obj `if test -f 'lemon.c'; then $(CYGPATH_W) 'lemon.c'; else $(CYGPATH_W) '$(srcdir)/lemon.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/lemon-lemon.Tpo $(DEPDIR)/lemon-lemon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lemon.c' object='lemon-lemon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lemon_CFLAGS) $(CFLAGS) -c -o lemon-lemon.obj `if test -f 'lemon.c'; then $(CYGPATH_W) 'lemon.c'; else $(CYGPATH_W) '$(srcdir)/lemon.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-bitfuncPYTHON: $(bitfunc_PYTHON)
	@$(NORMAL_INSTALL)
	@list='$(bitfunc_PYTHON)'; dlist=; list2=; test -n "$(bitfuncdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bitfuncdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bitfuncdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(bitfuncdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(bitfuncdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(bitfuncdir)" $$dlist; \
	else :; fi

uninstall-bitfuncPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(bitfunc_PYTHON)'; test -n "$(bitfuncdir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(bitfuncdir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$py_files" "$$pyc_files" "$$pyo_files"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	dir='$(DESTDIR)$(bitfuncdir)'; \
	echo "$$py_files" | $(am__pep3147_tweak) | $(am__base_list) | \
	  while read files; do \
	    $(am__uninstall_files_from_dir) || st=$$?; \
	  done || exit $$?; \
	exit $$st
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nobase_nodist_includeHEADERS: $(nobase_nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bitfuncdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/lemon-lemon.Po
	-rm -f ./$(DEPDIR)/libaiger_la-aiger.Plo
	-rm -f ./$(DEPDIR)/libbapparse_la-bap_lex.Plo
	-rm -f ./$(DEPDIR)/libbapparse_la-bap_parse.Plo
	-rm -f ./$(DEPDIR)/libbfabc_bridge_la-abc_bridge.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-array.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bap.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bfprobes.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bitfunc.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bitvec.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-cbranch.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-circuits.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-debug.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-klee_mem.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-llvm_definitions.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-machine_state.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-mem.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-pcode_definitions.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-program.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-solve.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-sparsebits.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-bitfuncPYTHON install-nobase_includeHEADERS \
	install-nobase_nodist_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/lemon-lemon.Po
	-rm -f ./$(DEPDIR)/libaiger_la-aiger.Plo
	-rm -f ./$(DEPDIR)/libbapparse_la-bap_lex.Plo
	-rm -f ./$(DEPDIR)/libbapparse_la-bap_parse.Plo
	-rm -f ./$(DEPDIR)/libbfabc_bridge_la-abc_bridge.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-array.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bap.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bfprobes.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bitfunc.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-bitvec.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-cbranch.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-circuits.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-debug.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-klee_mem.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-llvm_definitions.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-machine_state.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-mem.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-pcode_definitions.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-program.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-solve.Plo
	-rm -f ./$(DEPDIR)/libbitfunc_la-sparsebits.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-bitfuncPYTHON uninstall-libLTLIBRARIES \
	uninstall-nobase_includeHEADERS \
	uninstall-nobase_nodist_includeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-bitfuncPYTHON \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-nobase_includeHEADERS \
	install-nobase_nodist_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-bitfuncPYTHON \
	uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS \
	uninstall-nobase_nodist_includeHEADERS

.PRECIOUS: Makefile


# bap_parse.c: bap_parse.y
# 	$(LEMON) $^

# from the automake manual
parser.stamp: lemon
parser.stamp: bap_parse.y
	@rm -f parser.tmp
	@touch parser.tmp
	if $(PYTHON) $(srcdir)/samepath.py "$<" "bap_parse.y"; then cp -f "$<" bap_parse.y ; fi
	./lemon T=$(srcdir)/lempar.c bap_parse.y
	if $(PYTHON) $(srcdir)/samepath.py "$<" "bap_parse.y"; then rm -f bap_parse.y ; fi
	@cp -f parser.tmp $@
	@rm -f parser.tmp
bap_parse.c bap_parse.h bap_parse.out: parser.stamp
	@if test -f $@; then :; else \
		rm -f parser.stamp; \
		$(MAKE) $(AM_MAKEFLAGS) parser.stamp; \
	fi

lexer.stamp: bap_lex.l
	@rm -f lexer.tmp
	@touch lexer.tmp
	$(LEX) $<
	@cp -f lexer.tmp $@
	@rm -f lexer.tmp
bap_lex.c bap_lex.h: lexer.stamp
	@if test -f $@; then :; else \
	  rm -f parser.stamp; \
	  $(MAKE) $(AM_MAKEFLAGS) lexer.stamp; \
	fi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
